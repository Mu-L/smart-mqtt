# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: 构建&发布

on:
  push:
    branches: [ "master" ]
    tags:
      - v**
  pull_request:
    branches: [ "master" ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          path: smart-mqtt
      - uses: actions/checkout@v4
        name: 下载 feat
        with:
          repository: smartboot/feat
          path: feat
      - uses: actions/checkout@v4
        name: 下载 smart-mqtt
        with:
          repository: smartboot/smart-mqtt-enterprise
          token: ${{ secrets.GH_PAT }}
          path: smart-mqtt-enterprise
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Set up Maven 3.9
        uses: stCarolas/setup-maven@v5

      - name: Build Feat
        run: mvn -B install --file feat/pom.xml -DskipTests -Dmaven.compiler.source=8 -Dmaven.compiler.target=8
      - name: 编译 smart-mqtt 基础组件
        run: mvn -B install --file smart-mqtt/pom.xml -DskipTests -Dmaven.compiler.source=8 -Dmaven.compiler.target=8
      - name: 编译 smart-mqtt broker 模块
        run: mvn -B install --file smart-mqtt/smart-mqtt-broker/pom.xml -DskipTests -Dmaven.compiler.source=8 -Dmaven.compiler.target=8
      - name: 构建 MQTT Broker社区版
        run: mvn -B -f smart-mqtt-enterprise/poms/community.xml clean package -DskipTests -Dmaven.compiler.source=8 -Dmaven.compiler.target=8

      - name: deploy dir
        run: |
          mkdir -p smart-mqtt-enterprise/deploy/plugins
          cp smart-mqtt-enterprise/poms/target/smart-mqtt-broker-*.jar smart-mqtt-enterprise/deploy/smart-mqtt.jar
          cp smart-mqtt-enterprise/smart-mqtt.yaml smart-mqtt-enterprise/deploy/
          cp smart-mqtt-enterprise/start.sh smart-mqtt-enterprise/deploy/

      - name: 上传 smart-mqtt 制品
        uses: actions/upload-artifact@v4
        with:
          name: smart-mqtt-${{ github.ref_name }}
          compression-level: 0
          path: smart-mqtt-enterprise/deploy

      ## 构建企业版插件
      - name: Build smart-mqtt-enterprise
        run: mvn -B -f smart-mqtt/smart-mqtt-plugin-enterprise/pom.xml clean package -DskipTests -Dmaven.compiler.source=8 -Dmaven.compiler.target=8
      - name: Copy smart-mqtt-enterprise
        run: cp smart-mqtt/smart-mqtt-plugin-enterprise/target/smart-mqtt-plugin-enterprise-*.jar  smart-mqtt-enterprise/deploy/plugins
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: smart-mqtt-enterprise
          push: true
          no-cache: true
          tags: smartboot/smart-mqtt:latest,smartboot/smart-mqtt:${{ github.ref_name }},smartboot/smart-mqtt:1.1.0
          platforms: linux/amd64,linux/arm64